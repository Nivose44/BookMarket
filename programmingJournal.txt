FONCTIONNEMENT:
Au lieu d'un Trello, ce journal à pour but d'aider au suivi et à la réalisation du projet, ainsi que permettre à ses lecteurs de suivre l'évolution du projet et les étapes qui ont menées à sa réalisation.
L'idée de l'utilisation de ce document n'ayant germée qu'en cours de réalisation du projet, de nombreuses étapes sont manquantes.L'idée est venue de l'insatisfaction rencontrée dans l'utilisation de Trello, trop abstraite, indirecte et encadrée, au lieu qu'un document texte qui faisait office de journal officieux me permettait d'écrire chaque fonctionnalité ou action qu'il me fallait réaliser pour avance dans mon projet. Cette méthode, en plus du google slide, satisfaisant à mon besoin de suivi pour le respect de la méthodologie agile, j'ai décidé de le lui donner une forme un peu plus rigoureuse qui évoluera probablement.
Chaque thème est séparé d'une ligne, et son titre s'écrit en majuscules. Le premier s'appelle DONE et rappel ce qu'on trouve dans l'utilisation de cartes Trello.Ce thème récapitule les avancées/taches accomplies pour une journée donnée. Ce thème est vidé à chaque début de journée et les taches "DONE" peuvent être visualiées grace au commit journalier du document.
Le thème TO DO regroupe les taches à accomplir, celle ce trouvant en haut de la pile étant généralement la prochaine sur la liste. Ce terme permet de savoir les prochaines étapes à suivre et de noter à l'envolé les prochaines à accomplir.
Pour ce qui est des autres thèmes, ils sont librement définis, bien qu'il s'esquisse qu'un thème devrait englober chaque fonctionnalité majeur, étant une sorte de TO DO, enrichi de réflexions, pour une fonctionnalité particulière, ainsi qu'un thème plus général sur les problèmes qu'on entrevoit, ou qu'on a déjà rencontré sans qu'ils s'accompagnent d'une solution.

MISE A JOUR IMPORTANTE:
Seul le site winamax n'interdisant pas le scrapping de ses données dans à la fois robts.txt et ses cgu, l'application va devenir une plateforme permettant de parier virtuellement


Problème:
| 1947 | Ligue 1 Conforama    |           NULL | Outright        |          4.00 | Outright          |            1.15 |        1 | NULL      | France              | 2020-01-31 20:45:00 | 2020-01-29 13:31:21 |            1 |        NULL | 1000003767

DONE:
permettre à l'utilisateur de se déconnecter
Préciser dans la recherche de compétition, en plus de la région, le sport id, sinon risque de colision avec les autres sports
Récupérer l'id des matchs dans le scrapings 
Problème de requeête données corrigé
Ajouter DATE à la table paris
Organiser l'affichage des paris par date
afficher les paris effectués
Gérer l'affichage du tennis et paris avec deux issues 
afficher les plus gros gagnants

TO DO:
permettre aux utilisateru de créer des groupes pour se comparer et se défier
mentor@chappuis.net
Voir organiser mieux code kivy et bonnes pratiques possibles
test pep8 commentaires
Mettre appli en ligne et tester sur portable
Documentation
Implémenter l'automatisation du scraping
Améliorer la documentation
Enlever les outrights de merde
rendre le champ solde proportionné dans sa position par rapport au reste
ajouter des conditions et messages d'erreurs par rapport à la longueur du pseudo et du mot de passe
ajouter les images au git et organiser mieux les fichier (notamment image et base de données)
Ajouter un message d'erreur si pas de connexion au moment de la connexion
Mettre à joru l'argent du joueur dans kivy?
nettoyer les prints qui ne servent à rien
aller automatiquement sur la page de connexion si inscription validée
Améliorer en faisant en sorte que l'utilisateur s'enregistre avec une adresse mail et qu'il doive valider son compte via cette adresse
améliorer api et créer documentation
Ecrire les tests
Improve objects introspection and see pprint doc

DESIGN:
Pour le design principal, utiliser un cadre de télé pour diffuser les informations, mettre des iamges sur les boutons des sports, et représenter le bout d'une télécomande pour faire office
de menu
Couleur: #22B357

PISTE AMELIORATION:
Permettre de sélectionner seulement les paris gagnant/perdant/en cours
Faire une section stats qui donne des infos sur la qualtié du parieur, les psort où il gagne, combien etc

DOCUMENTATION:
Amelioréer la doc pour les datas winamax

Améliorer spider:
	Check ce que datas["items"] erreur est
	enregistrer le temps pour scrpaper ?
	faire en sorte qu'il y ait une relation qui soit créée entre un match et son précédent pari (peut être utilisée les id des matchs pour leur donner une référence unique (changer du coup MPD)
	Voir exactement ce qu'est l'erreur code is o, cette erreur doit être résolue
	Améliorer l'exception levée en cas de label d'odd non correspondante
	implémenter un compteur pour s'assurer que tous les éléments ont été ajoutés en bdd (?)
	AJouter le fait que si date affrontemente avant date scraping, ne pas yield l'element
	Ajouter le nom de la region pour la competition quand ligue des champions etc sinon on se retrouve dans competition avec des noms de groupe sans référence à la compétition elle meme
	créer tests 
	vérifier pep8
	peut être stocker les régions et compétitions dans des ligues à part pour simplifier l'api et mieux organiser les données

Améliorer API:
	Il faudra ensuite renvoyer la meilleur cote et le diffuseur associé
	Ecrire tests
	Gérer les erreurs
	créer un système de clef pour faire les requêtes ?(Voir cours api du gros cours de flask)

voir pour créer des graphique avec les données récupérées avec matplotlib et comment gérer leur stockage sur le serveur. (Est-il trop lourd de le faire en bdd?)

Exemple de représenation:
https://www.youtube.com/watch?v=xoA8aiGrkbw

deploiement sur android et ios:
http://www.albertgao.xyz/2017/06/14/how-to-deploy-kivy-app-to-ios-and-android/

