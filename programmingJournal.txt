FONCTIONNEMENT:
Au lieu d'un Trello, ce journal à pour but d'aider au suivi et à la réalisation du projet, ainsi que permettre à ses lecteurs de suivre l'évolution du projet et les étapes qui ont menées à sa réalisation.
L'idée de l'utilisation de ce document n'ayant germée qu'en cours de réalisation du projet, de nombreuses étapes sont manquantes.L'idée est venue de l'insatisfaction rencontrée dans l'utilisation de Trello, trop abstraite, indirecte et encadrée, au lieu qu'un document texte qui faisait office de journal officieux me permettait d'écrire chaque fonctionnalité ou action qu'il me fallait réaliser pour avance dans mon projet. Cette méthode, en plus du google slide, satisfaisant à mon besoin de suivi pour le respect de la méthodologie agile, j'ai décidé de le lui donner une forme un peu plus rigoureuse qui évoluera probablement.
Chaque thème est séparé d'une ligne, et son titre s'écrit en majuscules. Le premier s'appelle DONE et rappel ce qu'on trouve dans l'utilisation de cartes Trello.Ce thème récapitule les avancées/taches accomplies pour une journée donnée. Ce thème est vidé à chaque début de journée et les taches "DONE" peuvent être visualiées grace au commit journalier du document.
Le thème TO DO regroupe les taches à accomplir, celle ce trouvant en haut de la pile étant généralement la prochaine sur la liste. Ce terme permet de savoir les prochaines étapes à suivre et de noter à l'envolé les prochaines à accomplir.
Pour ce qui est des autres thèmes, ils sont librement définis, bien qu'il s'esquisse qu'un thème devrait englober chaque fonctionnalité majeur, étant une sorte de TO DO, enrichi de réflexions, pour une fonctionnalité particulière, ainsi qu'un thème plus général sur les problèmes qu'on entrevoit, ou qu'on a déjà rencontré sans qu'ils s'accompagnent d'une solution.

MISE A JOUR IMPORTANTE:
Seul le site winamax n'interdisant pas le scrapping de ses données dans à la fois robts.txt et ses cgu, l'application va devenir une plateforme permettant de parier virtuellement

			

DONE:
Mettre à jour cote exterieure avec possibilité de nul et ajouter une table résultat
Mettre a jour repo git en enlevant fichier non nécessaires
Créer spider pour récupérer les résultats

TO DO:
permettre à l'utilisateur d'enregistrer un pari sur son portable
Faire une requête au lancement de l'appli pour vérifier si résultat / permettre à l'utilisateur de faire cette requête / et peut être aussi automatiser cette requête
améliorer api et créer documentation
Avoir un outils pour comparer le nombre de match que renvoie chaque spider et voir pour chaque sport le nombre de match avec des dates d'affrontement similaires
Voir pour parions sport si une solution automatique de récuparation des pages liées aux différents championnats est possible
Programmer avec pycharm*
Ne pas utiliser le nom de la compétition ou des équipes pour comparer les cote entre différents bookmakers car il est fort probable que les noms ne soient pas toujours exactement similaires
Indiquer les paris qui n'ont qu'un seul bookmaker
Voir comment gérer les pages à appeler pour parions sport et leur évolution ( On ne peut pas automatiser la vérification d'équivalence entre les données récupérées et celle sur le site car elles
sont générées dynamiquement, pas plus qu'on ne peut comparer d'un site à l'autre car tous les sites n'offrent pas toujours une cote pour un match ou pas en meme temps. Il faut donc trouver un moyen
de lier toutes les entrées en bdd référencant un même match)
Ecrire les tests
Tester la V1 sur tléphone
mettre le return items de pipeline en commentaire et à utiliser seulement en cas de debug
Improve objects introspection and see pprint doc
Améliorer API, voir pour les images et logos

DOCUMENTATION:
Amelioréer la doc pour les datas winamax

Améliorer spider:
	Check ce que datas["items"] erreur est
	enregistrer le temps pour scrpaper ?
	faire en sorte qu'il y ait une relation qui soit créée entre un match et son précédent pari (peut être utilisée les id des matchs pour leur donner une référence unique (changer du coup MPD)
	Voir exactement ce qu'est l'erreur code is o, cette erreur doit être résolue
	Améliorer l'exception levée en cas de label d'odd non correspondante
	implémenter un compteur pour s'assurer que tous les éléments ont été ajoutés en bdd (?)
	AJouter le fait que si date affrontemente avant date scraping, ne pas yield l'element
	Ajouter le nom de la region pour la competition quand ligue des champions etc sinon on se retrouve dans competition avec des noms de groupe sans référence à la compétition elle meme
	créer tests 
	vérifier pep8
	peut être stocker les régions et compétitions dans des ligues à part pour simplifier l'api et mieux organiser les données

Améliorer API:
	Il faudra ensuite renvoyer la meilleur cote et le diffuseur associé
	Ecrire tests
	Gérer les erreurs
	créer un système de clef pour faire les requêtes ?(Voir cours api du gros cours de flask)

voir pour créer des graphique avec les données récupérées avec matplotlib et comment gérer leur stockage sur le serveur. (Est-il trop lourd de le faire en bdd?)

Exemple de représenation:
https://www.youtube.com/watch?v=xoA8aiGrkbw

deploiement sur android et ios:
http://www.albertgao.xyz/2017/06/14/how-to-deploy-kivy-app-to-ios-and-android/

PROBLEM TO SOLVE:
	- Comment doit fonctionner le scraper dans le cas où aucun match n'existe au moment du scrap?Les sites fournissent-ils une key vide ou pas d'informations du tout
	- Comment l'application va-t-elle réagir quand les paris seront en live? (modification à faier pour être sûr que l'utilisateru ne recoive pas d'alerte durant la phase de live?)
	- L'application va-t-elle continuer à faire des requête et tenir à jour l'utilisateur en cas d'alerte atteinte pour une côte qu'il a spécifié, ou cela ne se fera-t-il que
si l'utilisateur est directement sur l'application? (Il faut que des requêtes soient faites de manière régulière pour les paris ajouté en alert)
	- Certaines équipes ne sont pas appelées de la même facon entre les bookmakers ( exemple: Saint Etienne (winamax) / St Etienne (parions sport) ). Lever une exception
qui me préviendra si un cas de figure d'un match sans correspondance est trouvé
	- S'assurer que les noms, logos, éléments affichés n'empiètent pas les uns sur les autres
	- Vérifier que toutes les informations nécessaires à l'application peuvent être récupérées
	- VOir comment stocker les choix utilisateur
	- S'assurer que en choisissant all regions on ne puisse pas sélectionner d'autres régions

Idées d'amélioration:
	- Permettre aux utilisateurs de parier de la'rgent virtuel pour tester l'évolution de leur bankroll

Football scrap:

il faut d'abord récupér la liste des régions et la liste des compétitions
Pour chaque catégorie:
	on récupère category name
	on récupère matches id
	pour chaque id de matches id:
		on récupère mainbetId
		on récupère tv channels
		on récupère competitor1 et 2
		on récupère matchStart converti via timsestamp
		pour chaque outcomes de maintbetid:
			on récupère le label
			si label est égal à competitor1:
				competitor1 odd égal ouctomes odd 
			si label est égal à competitor2:
				competitor2 odd égal outcomes odd
			si label est égal à competitor3
				competitor3 odd égal ouctomes odd
			sinon:
				raise une exception


Rugby scrap:
id = '12'
'categories': [800000112, 800000113, 800000111, 800000201, 800000335, 800000115, 800000109, 800000004, 800000443]
pour region : 800000112
'categoryName': 'Champions Cup'
'tournaments': [41152, 35066, 35067, 35068, 35069, 35070]
"matches":[19902204,19902206,78412]
"19902204":{"mainBetId":65846495,"moreBets":1,"available":true,"score":"","period":"pre_match",
"hlType":"to_come","status":"PREMATCH","title":"Leinster - Lyon OU","roundName":"5e journ\u00e9e",
"tvChannels":"BEIN2","sportId":12,"categoryId":800000112,"tournamentId":35066,"competitor1Id":4210,
"competitor1Name":"Leinster","competitor2Id":52812,"competitor2Name":"Lyon OU","matchStart":1578834000}

problem to check:
Warning: 64833011: isn't a match because code is x and not 1, 2 or X 206147575,206147581,206147587
Warning: 64842922: isn't a match because code is x and not 1, 2 or X
Warning: 52660904: isn't a match because code is Paris Saint Germain and not 1, 2 or X
Warning: 53830260: isn't a match because code is Paris Saint Germain and not 1, 2 or X
Warning: 53083942: isn't a match because code is 0 and not 1, 2 or X
Warning: 48655741: isn't a match because code is Manchester City and not 1, 2 or X
Warning: 49310111: isn't a match because code is Manchester City and not 1, 2 or X
Warning: 53126112: isn't a match because code is 0 and not 1, 2 or X
Warning: 64762290: isn't a match because code is Over and not 1, 2 or X
Warning: 51343116: isn't a match because code is Manchester United and not 1, 2 or X
Warning: 64832707: isn't a match because code is o and not 1, 2 or X https://www.winamax.fr/paris-sportifs/sports/1/35/39

code is over:
https://www.winamax.fr/paris-sportifs/sports/1/31/33
58389930

code is o:
https://www.winamax.fr/paris-sportifs/sports/1/131/904
64842689



https://www.winamax.fr/paris-sportifs/sports/1/7/900002742
[179546845,179546846,179546847,179546848,179546849,179546850]

Logique kivy:
Requêter les informations nécessaires
Créer un widget pour le titre et un pour le bas (couleur: #6d9eebff)
créer pour chaque info un grid dans gridlayout en plus de deux grids de bases que seront favoris et alerts (couleur widgets: #c9daf8ff, couleur barre d'encadrement #d3d3d3ff)

